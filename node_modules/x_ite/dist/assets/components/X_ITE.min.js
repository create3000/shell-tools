/* X_ITE v9.1.6 */(()=>{"use strict";var t={n:e=>{var o=e&&e.__esModule?()=>e.default:()=>e;return t.d(o,{a:o}),o},d:(e,o)=>{for(var i in o)t.o(o,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:o[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const e=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Components");var o=t.n(e);const i=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Fields");var s=t.n(i);const a=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Base/X3DFieldDefinition");var n=t.n(a);const r=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Base/FieldDefinitionArray");var _=t.n(r);const p=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Components/Shape/X3DAppearanceChildNode");var h=t.n(p);const c=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Base/X3DConstants");var l=t.n(c);const u=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Namespace");var T=t.n(u);function d(t){h().call(this,t),this.addType(l().BlendMode),this.factorTypes=new Map,this.equationTypes=new Map}Object.assign(Object.setPrototypeOf(d.prototype,h().prototype),{initialize(){h().prototype.initialize.call(this);const t=this.getBrowser().getContext(),e=t.getExtension("EXT_blend_minmax");this.factorTypes.set("ZERO",t.ZERO),this.factorTypes.set("ONE",t.ONE),this.factorTypes.set("SRC_COLOR",t.SRC_COLOR),this.factorTypes.set("ONE_MINUS_SRC_COLOR",t.ONE_MINUS_SRC_COLOR),this.factorTypes.set("DST_COLOR",t.DST_COLOR),this.factorTypes.set("ONE_MINUS_DST_COLOR",t.ONE_MINUS_DST_COLOR),this.factorTypes.set("SRC_ALPHA",t.SRC_ALPHA),this.factorTypes.set("ONE_MINUS_SRC_ALPHA",t.ONE_MINUS_SRC_ALPHA),this.factorTypes.set("DST_ALPHA",t.DST_ALPHA),this.factorTypes.set("ONE_MINUS_DST_ALPHA",t.ONE_MINUS_DST_ALPHA),this.factorTypes.set("SRC_ALPHA_SATURATE",t.SRC_ALPHA_SATURATE),this.factorTypes.set("CONSTANT_COLOR",t.CONSTANT_COLOR),this.factorTypes.set("ONE_MINUS_CONSTANT_COLOR",t.ONE_MINUS_CONSTANT_COLOR),this.factorTypes.set("CONSTANT_ALPHA",t.CONSTANT_ALPHA),this.factorTypes.set("ONE_MINUS_CONSTANT_ALPHA",t.ONE_MINUS_CONSTANT_ALPHA),this.equationTypes.set("FUNC_ADD",t.FUNC_ADD),this.equationTypes.set("FUNC_SUBTRACT",t.FUNC_SUBTRACT),this.equationTypes.set("FUNC_REVERSE_SUBTRACT",t.FUNC_REVERSE_SUBTRACT),this.equationTypes.set("MIN",t.MIN||e&&e.MIN_EXT),this.equationTypes.set("MAX",t.MAX||e&&e.MAX_EXT),this._sourceColorFactor.addInterest("set_sourceColorFactor__",this),this._sourceAlphaFactor.addInterest("set_sourceAlphaFactor__",this),this._destinationColorFactor.addInterest("set_destinationColorFactor__",this),this._destinationAlphaFactor.addInterest("set_destinationAlphaFactor__",this),this._colorEquation.addInterest("set_colorEquation__",this),this._alphaEquation.addInterest("set_alphaEquation__",this),this.set_sourceColorFactor__(),this.set_sourceAlphaFactor__(),this.set_destinationColorFactor__(),this.set_destinationAlphaFactor__(),this.set_colorEquation__(),this.set_alphaEquation__()},set_sourceColorFactor__(){this.sourceColorFactorType=this.factorTypes.get(this._sourceColorFactor.getValue()),void 0===this.sourceColorFactorType&&(this.sourceColorFactorType=this.factorTypes.get("SRC_ALPHA"))},set_sourceAlphaFactor__(){this.sourceAlphaFactorType=this.factorTypes.get(this._sourceAlphaFactor.getValue()),void 0===this.sourceAlphaFactorType&&(this.sourceAlphaFactorType=this.factorTypes.get("ONE"))},set_destinationColorFactor__(){this.destinationColorFactorType=this.factorTypes.get(this._destinationColorFactor.getValue()),void 0===this.destinationColorFactorType&&(this.destinationColorFactorType=this.factorTypes.get("ONE_MINUS_SRC_ALPHA"))},set_destinationAlphaFactor__(){this.destinationAlphaFactorType=this.factorTypes.get(this._destinationAlphaFactor.getValue()),void 0===this.destinationAlphaFactorType&&(this.destinationAlphaFactorType=this.factorTypes.get("ONE_MINUS_SRC_ALPHA"))},set_colorEquation__(){this.colorEquationType=this.equationTypes.get(this._colorEquation.getValue()),void 0===this.colorEquationType&&(this.colorEquationType=this.equationTypes.get("FUNC_ADD"))},set_alphaEquation__(){this.alphaEquationType=this.equationTypes.get(this._alphaEquation.getValue()),void 0===this.alphaEquationType&&(this.alphaEquationType=this.equationTypes.get("FUNC_ADD"))},enable(t){const e=this._blendColor.getValue();t.blendColor(e.r,e.g,e.b,e.a),t.blendFuncSeparate(this.sourceColorFactorType,this.destinationColorFactorType,this.sourceAlphaFactorType,this.destinationAlphaFactorType),t.blendEquationSeparate(this.colorEquationType,this.alphaEquationType)},disable(t){t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA),t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD)}}),Object.defineProperties(d,{typeName:{value:"BlendMode",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"blendMode",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.3",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(_())([new(n())(l().inputOutput,"metadata",new(s().SFNode)),new(n())(l().inputOutput,"blendColor",new(s().SFColorRGBA)),new(n())(l().inputOutput,"sourceColorFactor",new(s().SFString)("SRC_ALPHA")),new(n())(l().inputOutput,"sourceAlphaFactor",new(s().SFString)("ONE")),new(n())(l().inputOutput,"destinationColorFactor",new(s().SFString)("ONE_MINUS_SRC_ALPHA")),new(n())(l().inputOutput,"destinationAlphaFactor",new(s().SFString)("ONE_MINUS_SRC_ALPHA")),new(n())(l().inputOutput,"colorEquation",new(s().SFString)("FUNC_ADD")),new(n())(l().inputOutput,"alphaEquation",new(s().SFString)("FUNC_ADD"))]),enumerable:!0}});const A=d;T().add("BlendMode","x_ite/Components/X_ITE/BlendMode",A);const S=A;function E(t){h().call(this,t),this.addType(l().DepthMode)}Object.assign(Object.setPrototypeOf(E.prototype,h().prototype),{initialize(){h().prototype.initialize.call(this),this._depthFunc.addInterest("set_depthFunc__",this),this.set_depthFunc__()},set_depthFunc__:function(){const t=new Map([["NEVER","NEVER"],["LESS","LESS"],["EQUAL","EQUAL"],["LESS_EQUAL","LEQUAL"],["GREATER","GREATER"],["NOT_EQUAL","NOTEQUAL"],["GREATER_EQUAL","GEQUAL"],["ALWAYS","ALWAYS"]]);return function(){const e=this.getBrowser().getContext();this.depthFunc=e[t.get(this._depthFunc.getValue())??"LEQUAL"]}}(),enable(t){this.depthWriteMask=t.getParameter(t.DEPTH_WRITEMASK),t.enable(t.POLYGON_OFFSET_FILL),t.polygonOffset(...this._polygonOffset),this._depthTest.getValue()?t.enable(t.DEPTH_TEST):t.disable(t.DEPTH_TEST),t.depthFunc(this.depthFunc),t.depthRange(...this._depthRange.getValue()),t.depthMask(this._depthMask.getValue())},disable(t){t.disable(t.POLYGON_OFFSET_FILL),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.depthRange(0,1),t.depthMask(this.depthWriteMask)}}),Object.defineProperties(E,{typeName:{value:"DepthMode",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"depthMode",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(_())([new(n())(l().inputOutput,"metadata",new(s().SFNode)),new(n())(l().inputOutput,"polygonOffset",new(s().SFVec2f)),new(n())(l().inputOutput,"depthRange",new(s().SFVec2f)(0,1)),new(n())(l().inputOutput,"depthTest",new(s().SFBool)(!0)),new(n())(l().inputOutput,"depthFunc",new(s().SFString)("LESS_EQUAL")),new(n())(l().inputOutput,"depthMask",new(s().SFBool)(!0))]),enumerable:!0}});const O=E;T().add("DepthMode","x_ite/Components/X_ITE/DepthMode",O);const F=O;o().add({name:"X_ITE",concreteNodes:[S,F],abstractNodes:[]});const C=void 0;T().add("X_ITE","assets/components/X_ITE",C)})();