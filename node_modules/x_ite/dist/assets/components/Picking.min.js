/* X_ITE v9.1.6 */(()=>{"use strict";var e={n:t=>{var i=t&&t.__esModule?()=>t.default:()=>t;return e.d(i,{a:i}),i},d:(t,i)=>{for(var n in i)e.o(i,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:i[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Components");var i=e.n(t);const n=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Fields");var o=e.n(n);const s=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Base/X3DFieldDefinition");var r=e.n(s);const a=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Base/FieldDefinitionArray");var c=e.n(a);const p=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Components/Core/X3DSensorNode");var h=e.n(p);const l=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Rendering/TraverseType");var d=e.n(l);const g=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Base/X3DConstants");var u=e.n(g);const m=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Namespace");var y=e.n(m);let _=0;const w={MATCH_ANY:_++,MATCH_EVERY:_++,MATCH_ONLY_ONE:_++};y().add("MatchCriterion","x_ite/Browser/Picking/MatchCriterion",w);const k=w;let S=0;const f={BOUNDS:S++,GEOMETRY:S++};y().add("IntersectionType","x_ite/Browser/Picking/IntersectionType",f);const b=f;let O=0;const v={ANY:O++,CLOSEST:O++,ALL:O++,ALL_SORTED:O++};y().add("SortOrder","x_ite/Browser/Picking/SortOrder",v);const T=v,N=window[Symbol.for("X_ITE.X3D-9.1.6")].require("standard/Math/Numbers/Matrix4");var C=e.n(N);function P(e,t){this.array=e,t&&(this.compare=t)}Object.assign(P.prototype,{compare:(e,t)=>e<t,sort(e,t){t-e>1&&this.quicksort(e,t-1)},quicksort(e,t){let i=e,n=t;const{array:o,compare:s}=this,r=o[e+t>>>1];for(;;){for(;s(o[i],r);)++i;for(;s(r,o[n]);)--n;if(!(i<n)){i===n&&(++i,--n);break}{const e=o[i];o[i]=o[n],o[n]=e,i++,n--}}e<n&&this.quicksort(e,n),i<t&&this.quicksort(i,t)}});const G=P;y().add("QuickSort","standard/Math/Algorithms/QuickSort",G);const M=G,x=window[Symbol.for("X_ITE.X3D-9.1.6")].require("standard/Utility/ObjectCache");var B,j,F,I=e.n(x)()(C());function A(e,t){return e.distance<t.distance}function D(e){h().call(this,e),this.addType(u().X3DPickSensorNode),this.objectType=new Set,this.intersectionType=b.BOUNDS,this.sortOrder=T.CLOSEST,this.pickTargetNodes=new Set,this.modelMatrices=[],this.targets=[],this.targets.size=0,this.pickedTargets=[],this.pickedTargetsSorter=new M(this.pickedTargets,A),this.pickedGeometries=new(o().MFNode)}Object.assign(Object.setPrototypeOf(D.prototype,h().prototype),{initialize(){this.getLive().addInterest("set_live__",this),this._enabled.addInterest("set_live__",this),this._objectType.addInterest("set_objectType__",this),this._matchCriterion.addInterest("set_matchCriterion__",this),this._intersectionType.addInterest("set_intersectionType__",this),this._sortOrder.addInterest("set_sortOrder__",this),this._pickTarget.addInterest("set_pickTarget__",this),this.set_objectType__(),this.set_matchCriterion__(),this.set_intersectionType__(),this.set_sortOrder__(),this.set_pickTarget__()},getObjectType(){return this.objectType},getMatchCriterion(){return this.matchCriterion},getIntersectionType(){return this.intersectionType},getSortOrder(){return this.sortOrder},getModelMatrices(){return this.modelMatrices},getTargets(){return this.targets},getPickShape:(()=>{const e=new WeakMap;return function(t){const i=e.get(t);if(void 0!==i)return i;const n=this.getBrowser(),o=n.getPrivateScene().createNode("Shape",!1),s=n.getPrivateScene().createNode("CollidableShape",!1);return o.setPrivate(!0),s.setPrivate(!0),s.setConvex(!0),o._geometry=t,s._shape=o,o.setup(),s.setup(),e.set(t,s),s}})(),getPickedGeometries:function(){var e=this.targets,t=e.size,i=this.pickedTargets,n=this.pickedGeometries;i.length=0;for(var o=0;o<t;++o){var s=e[o];s.intersected&&i.push(s)}if(0===i.length)return n.length=0,n;switch(this.sortOrder){case T.ANY:i.length=1,n[0]=this.getPickedGeometry(i[0]),n.length=1;break;case T.CLOSEST:this.pickedTargetsSorter.sort(0,i.length),i.length=1,n[0]=this.getPickedGeometry(i[0]),n.length=1;break;case T.ALL:o=0;for(var r=i.length;o<r;++o)n[o]=this.getPickedGeometry(i[o]);n.length=r;break;case T.ALL_SORTED:for(this.pickedTargetsSorter.sort(0,i.length),o=0,r=i.length;o<r;++o)n[o]=this.getPickedGeometry(i[o]);n.length=r}return n},getPickedGeometry(e){var t=this.getExecutionContext(),i=e.geometryNode;if(i.getExecutionContext()===t)return i;if((s=i.getExecutionContext()).getType().includes(u().X3DPrototypeInstance)&&s.getExecutionContext()===t)return s;for(var n=e.pickingHierarchy,o=n.length-1;o>=0;--o){var s,r=n[o];if(r.getExecutionContext()===t)return r;if((s=r.getExecutionContext()).getType().includes(u().X3DPrototypeInstance)&&s.getExecutionContext()===t)return s}return null},getPickedTargets(){return this.pickedTargets},set_live__(){this.getLive().getValue()&&this._enabled.getValue()&&!this.objectType.has("NONE")?(this.getBrowser().addPickSensor(this),this.setPickableObject(!0)):(this.getBrowser().removePickSensor(this),this.setPickableObject(!1))},set_objectType__(){this.objectType.clear();for(var e=0,t=this._objectType.length;e<t;++e)this.objectType.add(this._objectType[e]);this.set_live__()},set_matchCriterion__:(F=new Map([["MATCH_ANY",k.MATCH_ANY],["MATCH_EVERY",k.MATCH_EVERY],["MATCH_ONLY_ONE",k.MATCH_ONLY_ONE]]),function(){this.matchCriterion=F.get(this._matchCriterion.getValue()),void 0===this.matchCriterion&&(this.matchCriterion=MatchCriterionType.MATCH_ANY)}),set_intersectionType__:(j=new Map([["BOUNDS",b.BOUNDS],["GEOMETRY",b.GEOMETRY]]),function(){this.intersectionType=j.get(this._intersectionType.getValue()),void 0===this.intersectionType&&(this.intersectionType=b.BOUNDS)}),set_sortOrder__:(B=new Map([["ANY",T.ANY],["CLOSEST",T.CLOSEST],["ALL",T.ALL],["ALL_SORTED",T.ALL_SORTED]]),function(){this.sortOrder=B.get(this._sortOrder.getValue()),void 0===this.sortOrder&&(this.sortOrder=T.CLOSEST)}),set_pickTarget__(){this.pickTargetNodes.clear();for(var e=0,t=this._pickTarget.length;e<t;++e)try{for(var i=this._pickTarget[e].getValue().getInnerNode(),n=i.getType(),o=n.length-1;o>=0;--o)switch(n[o]){case u().Inline:case u().Shape:case u().X3DGroupingNode:this.pickTargetNodes.add(i);break;default:continue}}catch{}},traverse(e,t){e===d().PICKING&&this.isPickableObject()&&this.modelMatrices.push(I.pop().assign(t.getModelViewMatrix().get()))},collect(e,t,i){var n=this.pickTargetNodes;if(i.some((e=>n.has(e)))){var o=this.targets;if(o.size<o.length)var s=o[o.size];else{s={modelMatrix:new(C()),pickingHierarchy:[],pickedPoint:[],intersections:[]};o.push(s)}++o.size,s.intersected=!1,s.geometryNode=e,s.pickedPoint.length=0,s.intersections.length=0,s.modelMatrix.assign(t);for(var r=s.pickingHierarchy,a=0,c=i.length;a<c;++a)r[a]=i[a];r.length=c}},process(){for(var e=this.modelMatrices,t=0,i=e.length;t<i;++t)I.push(e[t]);this.modelMatrices.length=0,this.targets.size=0}}),Object.defineProperties(D,{typeName:{value:"X3DPickSensorNode",enumerable:!0},componentInfo:{value:Object.freeze({name:"Picking",level:1}),enumerable:!0}});const E=D;y().add("X3DPickSensorNode","x_ite/Components/Picking/X3DPickSensorNode",E);const z=E,L=window[Symbol.for("X_ITE.X3D-9.1.6")].require("standard/Math/Numbers/Vector3");var V=e.n(L);const X=window[Symbol.for("X_ITE.X3D-9.1.6")].require("standard/Math/Geometry/Box3");var R=e.n(X);const q=window[Symbol.for("X_ITE.X3D-9.1.6")].require("standard/Math/Geometry/Line3");var Y,H,U,W,K,Q,Z,J,$,ee,te,ie,ne,oe,se,re,ae=e.n(q);function ce(e){z.call(this,e),this.addType(u().LinePickSensor),this.pickingGeometryNode=null}Object.assign(Object.setPrototypeOf(ce.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this),this._pickingGeometry.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__(){this.pickingGeometryNode=null;try{for(var e=this._pickingGeometry.getValue().getInnerNode(),t=e.getType(),i=t.length-1;i>=0;--i)switch(t[i]){case u().IndexedLineSet:case u().LineSet:this.pickingGeometryNode=e;break;default:continue}}catch{}},process:(Y=new(R()),H=new(R()),U=new(V())(0,0,0),W=new(V())(0,0,0),K=new(C()),Q=new(V())(0,0,0),Z=new(V())(0,0,0),J=new(ae())(V().Zero,V().zAxis),$=new(V())(0,0,0),ee=new(V())(0,0,0),te=[],ie=[],ne=new(V())(0,0,0),oe=new(o().MFVec3f),se=new(o().MFVec3f),re=new(o().MFVec3f),function(){if(this.pickingGeometryNode){var e=this.getModelMatrices(),t=this.getTargets();switch(this.getIntersectionType()){case b.BOUNDS:for(var i=0,n=e.length;i<n;++i){var o=e[i];Y.assign(this.pickingGeometryNode.getBBox()).multRight(o);for(var s=0,r=t.size;s<r;++s){var a=t[s];H.assign(a.geometryNode.getBBox()).multRight(a.modelMatrix),Y.intersectsBox(H)&&(U.assign(Y.center),W.assign(H.center),a.intersected=!0,a.distance=U.distance(W))}}var c=!!(y=this.getPickedGeometries()).length;y.assign(y.filter((e=>e))),c!==this._isActive.getValue()&&(this._isActive=c),this._pickedGeometry.equals(y)||(this._pickedGeometry=y);break;case b.GEOMETRY:for(i=0,n=e.length;i<n;++i)for(o=e[i],Y.assign(this.pickingGeometryNode.getBBox()).multRight(o),s=0,r=t.size;s<r;++s){var p=(a=t[s]).geometryNode,h=this.pickingGeometryNode.getVertices();H.assign(p.getBBox()).multRight(a.modelMatrix),K.assign(a.modelMatrix).inverse().multLeft(o);for(var l=0,d=h.length;l<d;l+=8)if(K.multVecMatrix(Q.set(h[l+0],h[l+1],h[l+2])),K.multVecMatrix(Z.set(h[l+4],h[l+5],h[l+6])),J.setPoints(Q,Z),ie.length=0,p.intersectsLine(J,a.modelMatrix,te,ie))for(var g=0,u=ie.length;g<u;++g){var m=ie[g];$.assign(m.point).subtract(Q),ee.assign(m.point).subtract(Z),$.add(ee).magnitude()<=Q.distance(Z)&&a.intersections.push(m)}a.intersections.length&&(U.assign(Y.center),W.assign(H.center),a.intersected=!0,a.distance=U.distance(W))}var y;c=!!(y=this.getPickedGeometries()).length,y.assign(y.filter((e=>e))),c!==this._isActive.getValue()&&(this._isActive=c),this._pickedGeometry.equals(y)||(this._pickedGeometry=y);var _=this.getPickedTargets();for(oe.length=0,se.length=0,re.length=0,s=0,r=_.length;s<r;++s){var w=_[s].intersections;for(g=0,u=w.length;g<u;++g)s=(m=w[g]).texCoord,ne.set(s.x,s.y,s.z),oe.push(ne),se.push(m.normal),re.push(m.point)}this._pickedTextureCoordinate.equals(oe)||(this._pickedTextureCoordinate=oe),this._pickedNormal.equals(se)||(this._pickedNormal=se),this._pickedPoint.equals(re)||(this._pickedPoint=re)}}z.prototype.process.call(this)})}),Object.defineProperties(ce,{typeName:{value:"LinePickSensor",enumerable:!0},componentInfo:{value:Object.freeze({name:"Picking",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.2",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(c())([new(r())(u().inputOutput,"metadata",new(o().SFNode)),new(r())(u().inputOutput,"description",new(o().SFString)),new(r())(u().inputOutput,"enabled",new(o().SFBool)(!0)),new(r())(u().inputOutput,"objectType",new(o().MFString)("ALL")),new(r())(u().inputOutput,"matchCriterion",new(o().SFString)("MATCH_ANY")),new(r())(u().initializeOnly,"intersectionType",new(o().SFString)("BOUNDS")),new(r())(u().initializeOnly,"sortOrder",new(o().SFString)("CLOSEST")),new(r())(u().outputOnly,"isActive",new(o().SFBool)),new(r())(u().outputOnly,"pickedTextureCoordinate",new(o().MFVec3f)),new(r())(u().outputOnly,"pickedNormal",new(o().MFVec3f)),new(r())(u().outputOnly,"pickedPoint",new(o().MFVec3f)),new(r())(u().inputOutput,"pickingGeometry",new(o().SFNode)),new(r())(u().inputOutput,"pickTarget",new(o().MFNode)),new(r())(u().outputOnly,"pickedGeometry",new(o().MFNode))]),enumerable:!0}});const pe=ce;y().add("LinePickSensor","x_ite/Components/Picking/LinePickSensor",pe);const he=pe,le=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Components/Grouping/X3DGroupingNode");var de=e.n(le);function ge(e){this.addType(u().X3DPickableObject),this.objectType=new Set}Object.assign(ge.prototype,{initialize(){this._objectType.addInterest("set_objectType__",this),this.set_objectType__()},getObjectType(){return this.objectType},set_objectType__(){this.objectType.clear();for(var e=0,t=this._objectType.length;e<t;++e)this.objectType.add(this._objectType[e])},dispose(){}}),Object.defineProperties(ge,{typeName:{value:"X3DPickableObject",enumerable:!0},componentInfo:{value:Object.freeze({name:"Picking",level:1}),enumerable:!0}});const ue=ge;y().add("X3DPickableObject","x_ite/Components/Picking/X3DPickableObject",ue);const me=ue;function ye(e){de().call(this,e),me.call(this,e),this.addType(u().PickableGroup),this.pickSensorNodes=new Set}Object.assign(Object.setPrototypeOf(ye.prototype,de().prototype),me.prototype,{initialize(){de().prototype.initialize.call(this),me.prototype.initialize.call(this),this._pickable.addInterest("set_pickable__",this),this.set_pickable__()},set_pickableObjects__(){this.set_pickable__()},set_pickable__(){this.setPickableObject(!(!this._pickable.getValue()&&!this.getTransformSensors().size))},traverse(e,t){if(e===d().PICKING){if(this._pickable.getValue()){if(this.getObjectType().has("NONE"))return;const i=this.getBrowser(),n=i.getPickable();if(this.getObjectType().has("ALL"))n.push(!0),de().prototype.traverse.call(this,e,t),n.pop();else{const o=this.pickSensorNodes,s=i.getPickSensors();for(const e of s.at(-1)){if(!e.getObjectType().has("ALL")){let t=0;for(const i of this.getObjectType())if(e.getObjectType().has(i)){++t;break}switch(e.getMatchCriterion()){case k.MATCH_ANY:if(0===t)continue;break;case k.MATCH_EVERY:if(t!==pickSensor.getObjectType().size)continue;break;case k.MATCH_ONLY_ONE:if(1!==t)continue}}o.add(e)}n.push(!0),s.push(o),de().prototype.traverse.call(this,e,t),s.pop(),n.pop(),o.clear()}}}else de().prototype.traverse.call(this,e,t)},dispose(){me.prototype.dispose.call(this),de().prototype.dispose.call(this)}}),Object.defineProperties(ye,{typeName:{value:"PickableGroup",enumerable:!0},componentInfo:{value:Object.freeze({name:"Picking",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.2",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(c())([new(r())(u().inputOutput,"metadata",new(o().SFNode)),new(r())(u().inputOutput,"description",new(o().SFString)),new(r())(u().inputOutput,"pickable",new(o().SFBool)(!0)),new(r())(u().inputOutput,"objectType",new(o().MFString)("ALL")),new(r())(u().inputOutput,"visible",new(o().SFBool)(!0)),new(r())(u().inputOutput,"bboxDisplay",new(o().SFBool)),new(r())(u().initializeOnly,"bboxSize",new(o().SFVec3f)(-1,-1,-1)),new(r())(u().initializeOnly,"bboxCenter",new(o().SFVec3f)),new(r())(u().inputOnly,"addChildren",new(o().MFNode)),new(r())(u().inputOnly,"removeChildren",new(o().MFNode)),new(r())(u().inputOutput,"children",new(o().MFNode))]),enumerable:!0}});const _e=ye;y().add("PickableGroup","x_ite/Components/Picking/PickableGroup",_e);const we=_e,ke=window[Symbol.for("X_ITE.X3D-9.1.6")].require("x_ite/Base/X3DCast");var Se=e.n(ke);const fe=window[Symbol.for("X_ITE.X3D-9.1.6")].require("standard/Math/Numbers/Rotation4");var be=e.n(fe);const Oe=window[Symbol.for("X_ITE.X3D-9.1.6")].require("lib/ammojs/AmmoClass");var ve=e.n(Oe);function Te(){this.broadphase=new(ve().btDbvtBroadphase),this.collisionConfiguration=new(ve().btDefaultCollisionConfiguration),this.dispatcher=new(ve().btCollisionDispatcher)(this.collisionConfiguration),this.collisionWorld=new(ve().btCollisionWorld)(this.dispatcher,this.broadphase,this.collisionConfiguration),this.compoundShape1=new(ve().btCompoundShape),this.motionState1=new(ve().btDefaultMotionState),this.constructionInfo1=new(ve().btRigidBodyConstructionInfo)(0,this.motionState1,this.compoundShape1),this.rigidBody1=new(ve().btRigidBody)(this.constructionInfo1),this.compoundShape2=new(ve().btCompoundShape),this.motionState2=new(ve().btDefaultMotionState),this.constructionInfo2=new(ve().btRigidBodyConstructionInfo)(0,this.motionState2,this.compoundShape2),this.rigidBody2=new(ve().btRigidBody)(this.constructionInfo2),this.collisionWorld.addCollisionObject(this.rigidBody1),this.collisionWorld.addCollisionObject(this.rigidBody2)}Object.assign(Te.prototype,{constuctor:Te,setChildShape1(e,t){this.setChildShape(this.compoundShape1,e,t)},setChildShape2(e,t){this.setChildShape(this.compoundShape2,e,t)},setChildShape1Components(e,t,i){this.setChildShapeComponents(this.compoundShape1,e,t,i)},setChildShape2Components(e,t,i){this.setChildShapeComponents(this.compoundShape2,e,t,i)},setChildShape:(()=>{const e=new(V())(0,0,0),t=new(be()),i=new(V())(1,1,1),n=new(ve().btVector3)(0,0,0);return function(o,s,r){o.getNumChildShapes()&&o.removeChildShapeByIndex(0),r.getNumChildShapes()&&(s.get(e,t,i),n.setValue(i.x,i.y,i.z),r.setLocalScaling(n),o.addChildShape(this.getTransform(e,t),r))}})(),setChildShapeComponents(e,t,i,n){e.getNumChildShapes()&&e.removeChildShapeByIndex(0),n.getNumChildShapes()&&(n.setLocalScaling(i),e.addChildShape(t,n))},contactTest(){this.collisionWorld.performDiscreteCollisionDetection();const e=this.dispatcher.getNumManifolds();for(let t=0;t<e;++t){const e=this.dispatcher.getManifoldByIndexInternal(t),i=e.getNumContacts();for(let t=0;t<i;++t){if(e.getContactPoint(t).getDistance()<=0)return!0}}return!1},getTransform:(()=>{const e=new(ve().btTransform),t=new(ve().btVector3)(0,0,0),i=new(C());return function(n,o,s){const r=s||e;return i.set(n,o),t.setValue(i[12],i[13],i[14]),r.getBasis().setValue(i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]),r.setOrigin(t),r}})()});const Ne=Te;y().add("VolumePicker","x_ite/Browser/Picking/VolumePicker",Ne);const Ce=Ne;function Pe(e){z.call(this,e),this.addType(u().PointPickSensor),this.pickingGeometryNode=null,this.picker=new Ce,this.compoundShapes=[]}var Ge,Me,xe;Object.assign(Object.setPrototypeOf(Pe.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this),this._pickingGeometry.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__(){this.pickingGeometryNode&&this.pickingGeometryNode._rebuild.removeInterest("set_geometry__",this),this.pickingGeometryNode=Se()(u().PointSet,this._pickingGeometry),this.pickingGeometryNode&&this.pickingGeometryNode._rebuild.addInterest("set_geometry__",this),this.set_geometry__()},set_geometry__:(Ge=new(ve().btVector3)(1,1,1),Me=new(ve().btVector3),xe=new(ve().btTransform),function(){var e=this.compoundShapes;if(this.pickingGeometryNode){var t=this.pickingGeometryNode.getCoord();if(t){for(var i=0,n=t.getSize();i<n;++i)if(i<e.length){var o=e[i],s=t.get1Point(i,o.point);Me.setValue(s.x,s.y,s.z),xe.setOrigin(Me),o.setLocalScaling(Ge),o.updateChildTransform(0,xe)}else{o=new(ve().btCompoundShape);var r=new(ve().btSphereShape)(0);s=t.get1Point(i,new(V())(0,0,0)),o.point=s,Me.setValue(s.x,s.y,s.z),xe.setOrigin(Me),o.addChildShape(xe,r),e.push(o)}e.length=n}else e.length=0}else e.length=0}),process:(()=>{var e=new(R()),t=new(R()),i=new(V())(0,0,0),n=new(V())(0,0,0),s=new(ve().btTransform),r=new(ve().btVector3),a=new(V())(0,0,0),c=new(be()),p=new(V())(1,1,1),h=new(o().MFVec3f);return function(){if(this.pickingGeometryNode){var o=this.getModelMatrices(),l=this.getTargets();switch(this.getIntersectionType()){case b.BOUNDS:for(var d=0,g=o.length;d<g;++d){var u=o[d];e.assign(this.pickingGeometryNode.getBBox()).multRight(u);for(var m=0,y=l.size;m<y;++m){var _=l[m];t.assign(_.geometryNode.getBBox()).multRight(_.modelMatrix),e.intersectsBox(t)&&(i.assign(e.center),n.assign(t.center),_.intersected=!0,_.distance=i.distance(n))}}var w=!!(N=this.getPickedGeometries()).length;N.assign(N.filter((e=>e))),w!==this._isActive.getValue()&&(this._isActive=w),this._pickedGeometry.equals(N)||(this._pickedGeometry=N);break;case b.GEOMETRY:var k=this.picker,S=this.compoundShapes;for(d=0,g=o.length;d<g;++d){u=o[d];e.assign(this.pickingGeometryNode.getBBox()).multRight(u),u.get(a,c,p),k.getTransform(a,c,s),r.setValue(p.x,p.y,p.z);for(var f=0,O=S.length;f<O;++f){var v=S[f];k.setChildShape1Components(s,r,v);for(m=0,y=l.size;m<y;++m){_=l[m];var T=this.getPickShape(_.geometryNode);t.assign(_.geometryNode.getBBox()).multRight(_.modelMatrix),k.setChildShape2(_.modelMatrix,T.getCompoundShape()),k.contactTest()&&(i.assign(e.center),n.assign(t.center),_.intersected=!0,_.distance=i.distance(n),_.pickedPoint.push(v.point))}}}var N;w=!!(N=this.getPickedGeometries()).length;N.assign(N.filter((e=>e))),w!==this._isActive.getValue()&&(this._isActive=w),this._pickedGeometry.equals(N)||(this._pickedGeometry=N);var C=this.getPickedTargets();h.length=0;for(m=0,y=C.length;m<y;++m)for(var P=C[m].pickedPoint,G=0,M=P.length;G<M;++G)h.push(P[G]);this._pickedPoint.equals(h)||(this._pickedPoint=h)}}z.prototype.process.call(this)}})()}),Object.defineProperties(Pe,{typeName:{value:"PointPickSensor",enumerable:!0},componentInfo:{value:Object.freeze({name:"Picking",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.2",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(c())([new(r())(u().inputOutput,"metadata",new(o().SFNode)),new(r())(u().inputOutput,"description",new(o().SFString)),new(r())(u().inputOutput,"enabled",new(o().SFBool)(!0)),new(r())(u().inputOutput,"objectType",new(o().MFString)("ALL")),new(r())(u().inputOutput,"matchCriterion",new(o().SFString)("MATCH_ANY")),new(r())(u().initializeOnly,"intersectionType",new(o().SFString)("BOUNDS")),new(r())(u().initializeOnly,"sortOrder",new(o().SFString)("CLOSEST")),new(r())(u().outputOnly,"isActive",new(o().SFBool)),new(r())(u().outputOnly,"pickedPoint",new(o().MFVec3f)),new(r())(u().inputOutput,"pickingGeometry",new(o().SFNode)),new(r())(u().inputOutput,"pickTarget",new(o().MFNode)),new(r())(u().outputOnly,"pickedGeometry",new(o().MFNode))]),enumerable:!0}});const Be=Pe;y().add("PointPickSensor","x_ite/Components/Picking/PointPickSensor",Be);const je=Be;function Fe(e){z.call(this,e),this.addType(u().PrimitivePickSensor),this.pickingGeometryNode=null,this.picker=new Ce}Object.assign(Object.setPrototypeOf(Fe.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this),this._pickingGeometry.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__(){this.pickingGeometryNode=null;try{for(var e=this._pickingGeometry.getValue().getInnerNode(),t=e.getType(),i=t.length-1;i>=0;--i)switch(t[i]){case u().Box:case u().Cone:case u().Cylinder:case u().Sphere:this.pickingGeometryNode=e;break;default:continue}}catch{}},process:(()=>{var e=new(R()),t=new(R()),i=new(V())(0,0,0),n=new(V())(0,0,0);return function(){if(this.pickingGeometryNode){var o=this.getModelMatrices(),s=this.getTargets();switch(this.getIntersectionType()){case b.BOUNDS:for(var r=0,a=o.length;r<a;++r){var c=o[r];e.assign(this.pickingGeometryNode.getBBox()).multRight(c);for(var p=0,h=s.size;p<h;++p){var l=s[p];t.assign(l.geometryNode.getBBox()).multRight(l.modelMatrix),e.intersectsBox(t)&&(i.assign(e.center),n.assign(t.center),l.intersected=!0,l.distance=i.distance(n))}}var d=!!(y=this.getPickedGeometries()).length;y.assign(y.filter((e=>e))),d!==this._isActive.getValue()&&(this._isActive=d),this._pickedGeometry.equals(y)||(this._pickedGeometry=y);break;case b.GEOMETRY:var g=this.picker;for(r=0,a=o.length;r<a;++r){c=o[r];var u=this.getPickShape(this.pickingGeometryNode);e.assign(this.pickingGeometryNode.getBBox()).multRight(c),g.setChildShape1(c,u.getCompoundShape());for(p=0,h=s.size;p<h;++p){l=s[p];var m=this.getPickShape(l.geometryNode);t.assign(l.geometryNode.getBBox()).multRight(l.modelMatrix),g.setChildShape2(l.modelMatrix,m.getCompoundShape()),g.contactTest()&&(i.assign(e.center),n.assign(t.center),l.intersected=!0,l.distance=i.distance(n))}}var y;d=!!(y=this.getPickedGeometries()).length;y.assign(y.filter((e=>e))),d!==this._isActive.getValue()&&(this._isActive=d),this._pickedGeometry.equals(y)||(this._pickedGeometry=y)}}z.prototype.process.call(this)}})()}),Object.defineProperties(Fe,{typeName:{value:"PrimitivePickSensor",enumerable:!0},componentInfo:{value:Object.freeze({name:"Picking",level:2}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.2",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(c())([new(r())(u().inputOutput,"metadata",new(o().SFNode)),new(r())(u().inputOutput,"description",new(o().SFString)),new(r())(u().inputOutput,"enabled",new(o().SFBool)(!0)),new(r())(u().inputOutput,"objectType",new(o().MFString)("ALL")),new(r())(u().inputOutput,"matchCriterion",new(o().SFString)("MATCH_ANY")),new(r())(u().initializeOnly,"intersectionType",new(o().SFString)("BOUNDS")),new(r())(u().initializeOnly,"sortOrder",new(o().SFString)("CLOSEST")),new(r())(u().outputOnly,"isActive",new(o().SFBool)),new(r())(u().inputOutput,"pickingGeometry",new(o().SFNode)),new(r())(u().inputOutput,"pickTarget",new(o().MFNode)),new(r())(u().outputOnly,"pickedGeometry",new(o().MFNode))]),enumerable:!0}});const Ie=Fe;y().add("PrimitivePickSensor","x_ite/Components/Picking/PrimitivePickSensor",Ie);const Ae=Ie;function De(e){z.call(this,e),this.addType(u().VolumePickSensor),this.pickingGeometryNode=null,this.picker=new Ce}Object.assign(Object.setPrototypeOf(De.prototype,z.prototype),{initialize(){z.prototype.initialize.call(this),this._pickingGeometry.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__(){this.pickingGeometryNode=Se()(u().X3DGeometryNode,this._pickingGeometry)},process:(()=>{var e=new(R()),t=new(R()),i=new(V())(0,0,0),n=new(V())(0,0,0);return function(){if(this.pickingGeometryNode){var o=this.getModelMatrices(),s=this.getTargets();switch(this.getIntersectionType()){case b.BOUNDS:for(var r=0,a=o.length;r<a;++r){var c=o[r];e.assign(this.pickingGeometryNode.getBBox()).multRight(c);for(var p=0,h=s.size;p<h;++p){var l=s[p];t.assign(l.geometryNode.getBBox()).multRight(l.modelMatrix),e.intersectsBox(t)&&(i.assign(e.center),n.assign(t.center),l.intersected=!0,l.distance=i.distance(n))}}var d=!!(y=this.getPickedGeometries()).length;y.assign(y.filter((e=>e))),d!==this._isActive.getValue()&&(this._isActive=d),this._pickedGeometry.equals(y)||(this._pickedGeometry=y);break;case b.GEOMETRY:var g=this.picker;for(r=0,a=o.length;r<a;++r){c=o[r];var u=this.getPickShape(this.pickingGeometryNode);e.assign(this.pickingGeometryNode.getBBox()).multRight(c),g.setChildShape1(c,u.getCompoundShape());for(p=0,h=s.size;p<h;++p){l=s[p];var m=this.getPickShape(l.geometryNode);t.assign(l.geometryNode.getBBox()).multRight(l.modelMatrix),g.setChildShape2(l.modelMatrix,m.getCompoundShape()),g.contactTest()&&(i.assign(e.center),n.assign(t.center),l.intersected=!0,l.distance=i.distance(n))}}var y;d=!!(y=this.getPickedGeometries()).length;y.assign(y.filter((e=>e))),d!==this._isActive.getValue()&&(this._isActive=d),this._pickedGeometry.equals(y)||(this._pickedGeometry=y)}}z.prototype.process.call(this)}})()}),Object.defineProperties(De,{typeName:{value:"VolumePickSensor",enumerable:!0},componentInfo:{value:Object.freeze({name:"Picking",level:3}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.2",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(c())([new(r())(u().inputOutput,"metadata",new(o().SFNode)),new(r())(u().inputOutput,"description",new(o().SFString)),new(r())(u().inputOutput,"enabled",new(o().SFBool)(!0)),new(r())(u().inputOutput,"objectType",new(o().MFString)("ALL")),new(r())(u().inputOutput,"matchCriterion",new(o().SFString)("MATCH_ANY")),new(r())(u().initializeOnly,"intersectionType",new(o().SFString)("BOUNDS")),new(r())(u().initializeOnly,"sortOrder",new(o().SFString)("CLOSEST")),new(r())(u().outputOnly,"isActive",new(o().SFBool)),new(r())(u().inputOutput,"pickingGeometry",new(o().SFNode)),new(r())(u().inputOutput,"pickTarget",new(o().MFNode)),new(r())(u().outputOnly,"pickedGeometry",new(o().MFNode))]),enumerable:!0}});const Ee=De;y().add("VolumePickSensor","x_ite/Components/Picking/VolumePickSensor",Ee);const ze=Ee;i().add({name:"Picking",concreteNodes:[he,we,je,Ae,ze],abstractNodes:[z,me]});const Le=void 0;y().add("Picking","assets/components/Picking",Le)})();